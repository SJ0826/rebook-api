# .github/workflows/deploy.yml
name: Deploy to EC2

on:
  push:
    branches:
      - main  # main 브랜치에 푸시될 때 실행

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Deploy to EC2
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > private_key.pem
          chmod 600 private_key.pem
          
          # SSH 연결 테스트
          ssh -o StrictHostKeyChecking=no -o ConnectTimeout=30 -i private_key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "echo 'SSH connection test successful'"
          
          # 배포 실행
          ssh -o StrictHostKeyChecking=no -o ConnectTimeout=30 -i private_key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            set -e  # 에러 발생시 즉시 중단
          
            echo "🚀 Starting deployment..."
          
            # Node.js 20 사용 확인
            source ~/.bashrc
            nvm use 20 || echo "Warning: nvm not available"
          
            # 애플리케이션 디렉토리로 이동
            cd /home/ubuntu/rebook-api
          
            # Node.js 버전 확인
            echo "Node.js version: $(node --version)"
            echo "NPM version: $(npm --version)"
          
            # Git에서 최신 코드 pull
            git pull origin main
          
            # 의존성 설치
            npm ci
          
            # 애플리케이션 빌드
            npm run build
          
            # PM2로 애플리케이션 재시작 (graceful reload 사용)
            pm2 reload ecosystem.config.js --env production || pm2 start ecosystem.config.js --env production
          
            # PM2 프로세스 상태 확인
            pm2 status
          
            echo "✅ Deployment completed successfully!"
          EOF
          
          # SSH 키 파일 정리
          rm -f private_key.pem